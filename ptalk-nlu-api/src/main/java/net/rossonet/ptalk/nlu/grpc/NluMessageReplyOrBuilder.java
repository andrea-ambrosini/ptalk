// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ptalk-nlu-api.proto

package net.rossonet.ptalk.nlu.grpc;

public interface NluMessageReplyOrBuilder extends
    // @@protoc_insertion_point(interface_extends:nlu.NluMessageReply)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * the flow related to this message
   * </pre>
   *
   * <code>string flowReference = 1;</code>
   * @return The flowReference.
   */
  java.lang.String getFlowReference();
  /**
   * <pre>
   * the flow related to this message
   * </pre>
   *
   * <code>string flowReference = 1;</code>
   * @return The bytes for flowReference.
   */
  com.google.protobuf.ByteString
      getFlowReferenceBytes();

  /**
   * <pre>
   * in case this request is related to a channel message, here we have the channelUniqueMessageId
   * </pre>
   *
   * <code>string messageReference = 2;</code>
   * @return The messageReference.
   */
  java.lang.String getMessageReference();
  /**
   * <pre>
   * in case this request is related to a channel message, here we have the channelUniqueMessageId
   * </pre>
   *
   * <code>string messageReference = 2;</code>
   * @return The bytes for messageReference.
   */
  com.google.protobuf.ByteString
      getMessageReferenceBytes();

  /**
   * <pre>
   * context in original format
   * </pre>
   *
   * <code>string originContext = 3;</code>
   * @return The originContext.
   */
  java.lang.String getOriginContext();
  /**
   * <pre>
   * context in original format
   * </pre>
   *
   * <code>string originContext = 3;</code>
   * @return The bytes for originContext.
   */
  com.google.protobuf.ByteString
      getOriginContextBytes();

  /**
   * <pre>
   * the model that generated this reply
   * </pre>
   *
   * <code>.nlu.NluModel model = 4;</code>
   * @return Whether the model field is set.
   */
  boolean hasModel();
  /**
   * <pre>
   * the model that generated this reply
   * </pre>
   *
   * <code>.nlu.NluModel model = 4;</code>
   * @return The model.
   */
  net.rossonet.ptalk.nlu.grpc.NluModel getModel();
  /**
   * <pre>
   * the model that generated this reply
   * </pre>
   *
   * <code>.nlu.NluModel model = 4;</code>
   */
  net.rossonet.ptalk.nlu.grpc.NluModelOrBuilder getModelOrBuilder();

  /**
   * <pre>
   * the core engine task that will process this reply
   * </pre>
   *
   * <code>string task = 5;</code>
   * @return The task.
   */
  java.lang.String getTask();
  /**
   * <pre>
   * the core engine task that will process this reply
   * </pre>
   *
   * <code>string task = 5;</code>
   * @return The bytes for task.
   */
  com.google.protobuf.ByteString
      getTaskBytes();

  /**
   * <pre>
   * the base reply
   * </pre>
   *
   * <code>.base.Data reply = 6;</code>
   * @return Whether the reply field is set.
   */
  boolean hasReply();
  /**
   * <pre>
   * the base reply
   * </pre>
   *
   * <code>.base.Data reply = 6;</code>
   * @return The reply.
   */
  net.rossonet.ptalk.base.grpc.Data getReply();
  /**
   * <pre>
   * the base reply
   * </pre>
   *
   * <code>.base.Data reply = 6;</code>
   */
  net.rossonet.ptalk.base.grpc.DataOrBuilder getReplyOrBuilder();

  /**
   * <pre>
   * context in json format
   * </pre>
   *
   * <code>string contextJson = 7;</code>
   * @return The contextJson.
   */
  java.lang.String getContextJson();
  /**
   * <pre>
   * context in json format
   * </pre>
   *
   * <code>string contextJson = 7;</code>
   * @return The bytes for contextJson.
   */
  com.google.protobuf.ByteString
      getContextJsonBytes();

  /**
   * <code>.base.StatusValue status = 8;</code>
   * @return The enum numeric value on the wire for status.
   */
  int getStatusValue();
  /**
   * <code>.base.StatusValue status = 8;</code>
   * @return The status.
   */
  net.rossonet.ptalk.base.grpc.StatusValue getStatus();

  /**
   * <pre>
   * array of additional datas
   * </pre>
   *
   * <code>repeated .base.Data additionalDatas = 9;</code>
   */
  java.util.List<net.rossonet.ptalk.base.grpc.Data> 
      getAdditionalDatasList();
  /**
   * <pre>
   * array of additional datas
   * </pre>
   *
   * <code>repeated .base.Data additionalDatas = 9;</code>
   */
  net.rossonet.ptalk.base.grpc.Data getAdditionalDatas(int index);
  /**
   * <pre>
   * array of additional datas
   * </pre>
   *
   * <code>repeated .base.Data additionalDatas = 9;</code>
   */
  int getAdditionalDatasCount();
  /**
   * <pre>
   * array of additional datas
   * </pre>
   *
   * <code>repeated .base.Data additionalDatas = 9;</code>
   */
  java.util.List<? extends net.rossonet.ptalk.base.grpc.DataOrBuilder> 
      getAdditionalDatasOrBuilderList();
  /**
   * <pre>
   * array of additional datas
   * </pre>
   *
   * <code>repeated .base.Data additionalDatas = 9;</code>
   */
  net.rossonet.ptalk.base.grpc.DataOrBuilder getAdditionalDatasOrBuilder(
      int index);

  /**
   * <code>repeated .base.Tag tags = 10;</code>
   */
  java.util.List<net.rossonet.ptalk.base.grpc.Tag> 
      getTagsList();
  /**
   * <code>repeated .base.Tag tags = 10;</code>
   */
  net.rossonet.ptalk.base.grpc.Tag getTags(int index);
  /**
   * <code>repeated .base.Tag tags = 10;</code>
   */
  int getTagsCount();
  /**
   * <code>repeated .base.Tag tags = 10;</code>
   */
  java.util.List<? extends net.rossonet.ptalk.base.grpc.TagOrBuilder> 
      getTagsOrBuilderList();
  /**
   * <code>repeated .base.Tag tags = 10;</code>
   */
  net.rossonet.ptalk.base.grpc.TagOrBuilder getTagsOrBuilder(
      int index);

  /**
   * <code>.base.Timestamp timestamp = 11;</code>
   * @return Whether the timestamp field is set.
   */
  boolean hasTimestamp();
  /**
   * <code>.base.Timestamp timestamp = 11;</code>
   * @return The timestamp.
   */
  net.rossonet.ptalk.base.grpc.Timestamp getTimestamp();
  /**
   * <code>.base.Timestamp timestamp = 11;</code>
   */
  net.rossonet.ptalk.base.grpc.TimestampOrBuilder getTimestampOrBuilder();

  /**
   * <pre>
   * enable or disable trace log function
   * </pre>
   *
   * <code>bool traceLog = 12;</code>
   * @return The traceLog.
   */
  boolean getTraceLog();
}
